name: Deploy

on:
  push:
    branches:
      - 'main'

jobs:
  android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        cache: true

    - name: Set up key.properties
      run: |
        echo "keyPassword=${{ secrets.KEY_PASSWORD }}" > android/key.properties
        echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
        echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
        echo "${{ secrets.STORE_FILE_CONTENT }}" | base64 --decode > android/key.jks

    - name: Set up local.properties
      run: |
        echo "flutter.sdk=$FLUTTER_ROOT" > android/local.properties

    - name: Extract version from pubspec.yaml
      id: extract_version
      run: |
          VERSION_NAME=$(grep 'version:' pubspec.yaml | sed 's/version: \(.*\)+.*/\1/')
          VERSION_CODE=$(grep 'version:' pubspec.yaml | sed 's/.*+\(.*\)/\1/')
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV

    - name: Set up Play Store Secret
      run: |
        echo "${{ secrets.PLAY_STORE_SECRET }}" | base64 --decode > android/play_store_secret.json

    - name: Setup Fastlane
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3.4
        rubygems: latest
        bundler-cache: false

    - name: Build and Deploy
      env:
        FLUTTER_VERSION_NAME: ${{ env.VERSION_NAME }}
        FLUTTER_VERSION_CODE: ${{ env.VERSION_CODE }}
      run: |
        flutter pub get
        make deploy-android

  ios:
    runs-on: macos-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Set up App Store Connect
        run: |
          echo "${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}" | base64 --decode > ios/app_store_connect.json

      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.4
          rubygems: latest
          bundler-cache: false

      - name: Build and Deploy
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          APP_STORE_CONNECT_API_KEY_BASE64: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
        run: |
          flutter pub get
          make deploy-ios


  tag:
    runs-on: ubuntu-latest
    needs: [android, ios]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Flutter Version
        run: |
          versionName=`cat pubspec.yaml | grep -o 'version:[^:]*' | cut -f2 -d":" | xargs`
          echo "VERSION_NAME=v$versionName" >> $GITHUB_ENV

      - name: Create Tag and Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          title: ${{ env.VERSION_NAME }}
          automatic_release_tag: ${{ env.VERSION_NAME }}
          draft: false
          prerelease: false



